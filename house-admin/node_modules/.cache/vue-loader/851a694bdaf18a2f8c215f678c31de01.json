{"remainingRequest":"C:\\Users\\xubo\\Desktop\\房屋租赁项目\\house-admin\\node_modules\\.store\\vue-loader@15.10.1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\xubo\\Desktop\\房屋租赁项目\\house-admin\\src\\views\\system\\user\\index.vue?vue&type=template&id=1930a3c4&","dependencies":[{"path":"C:\\Users\\xubo\\Desktop\\房屋租赁项目\\house-admin\\src\\views\\system\\user\\index.vue","mtime":1682901618000},{"path":"C:\\Users\\xubo\\Desktop\\房屋租赁项目\\house-admin\\node_modules\\.store\\cache-loader@4.1.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\xubo\\Desktop\\房屋租赁项目\\house-admin\\node_modules\\.store\\vue-loader@15.10.1\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\xubo\\Desktop\\房屋租赁项目\\house-admin\\node_modules\\.store\\cache-loader@4.1.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\xubo\\Desktop\\房屋租赁项目\\house-admin\\node_modules\\.store\\vue-loader@15.10.1\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}